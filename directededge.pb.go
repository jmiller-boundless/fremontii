// Code generated by protoc-gen-go. DO NOT EDIT.
// source: directededge.proto

package directededge

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DirectedEdge struct {
	Endnode           uint64 `protobuf:"varint,1,opt,name=endnode" json:"endnode,omitempty"`
	Accessrestriction uint64 `protobuf:"varint,2,opt,name=accessrestriction" json:"accessrestriction,omitempty"`
	Startrestriction  uint64 `protobuf:"varint,3,opt,name=startrestriction" json:"startrestriction,omitempty"`
	Endrestriction    uint64 `protobuf:"varint,4,opt,name=endrestriction" json:"endrestriction,omitempty"`
	Exitsign          uint64 `protobuf:"varint,5,opt,name=exitsign" json:"exitsign,omitempty"`
	Forward           uint64 `protobuf:"varint,6,opt,name=forward" json:"forward,omitempty"`
	Driveonright      uint64 `protobuf:"varint,7,opt,name=driveonright" json:"driveonright,omitempty"`
	Speed             uint64 `protobuf:"varint,8,opt,name=speed" json:"speed,omitempty"`
	Truckspeed        uint64 `protobuf:"varint,9,opt,name=truckspeed" json:"truckspeed,omitempty"`
	Restrictions      uint64 `protobuf:"varint,10,opt,name=restrictions" json:"restrictions,omitempty"`
	Lanecount         uint64 `protobuf:"varint,11,opt,name=lanecount" json:"lanecount,omitempty"`
	Bikenetwork       uint64 `protobuf:"varint,12,opt,name=bikenetwork" json:"bikenetwork,omitempty"`
	Use               uint64 `protobuf:"varint,13,opt,name=use" json:"use,omitempty"`
	Speedtype         uint64 `protobuf:"varint,14,opt,name=speedtype" json:"speedtype,omitempty"`
	Oppindex          uint64 `protobuf:"varint,15,opt,name=oppindex" json:"oppindex,omitempty"`
	Link              uint64 `protobuf:"varint,16,opt,name=link" json:"link,omitempty"`
	Internal          uint64 `protobuf:"varint,17,opt,name=internal" json:"internal,omitempty"`
	Deadend           uint64 `protobuf:"varint,18,opt,name=deadend" json:"deadend,omitempty"`
	Toll              uint64 `protobuf:"varint,19,opt,name=toll" json:"toll,omitempty"`
	Seasonal          uint64 `protobuf:"varint,20,opt,name=seasonal" json:"seasonal,omitempty"`
	DestOnly          uint64 `protobuf:"varint,21,opt,name=dest_only,json=destOnly" json:"dest_only,omitempty"`
	//  (private or no through traffic)
	Tunnel                   uint64 `protobuf:"varint,22,opt,name=tunnel" json:"tunnel,omitempty"`
	Bridge                   uint64 `protobuf:"varint,23,opt,name=bridge" json:"bridge,omitempty"`
	Roundabout               uint64 `protobuf:"varint,24,opt,name=roundabout" json:"roundabout,omitempty"`
	Unreachable              uint64 `protobuf:"varint,25,opt,name=unreachable" json:"unreachable,omitempty"`
	TrafficSignal            uint64 `protobuf:"varint,26,opt,name=traffic_signal,json=trafficSignal" json:"traffic_signal,omitempty"`
	NotThru                  uint64 `protobuf:"varint,27,opt,name=not_thru,json=notThru" json:"not_thru,omitempty"`
	CycleLane                uint64 `protobuf:"varint,28,opt,name=cycle_lane,json=cycleLane" json:"cycle_lane,omitempty"`
	TruckRoute               uint64 `protobuf:"varint,29,opt,name=truck_route,json=truckRoute" json:"truck_route,omitempty"`
	CtryCrossing             uint64 `protobuf:"varint,30,opt,name=ctry_crossing,json=ctryCrossing" json:"ctry_crossing,omitempty"`
	PartOfComplexRestriction uint64 `protobuf:"varint,31,opt,name=part_of_complex_restriction,json=partOfComplexRestriction" json:"part_of_complex_restriction,omitempty"`
	Forwardaccess            uint64 `protobuf:"varint,32,opt,name=forwardaccess" json:"forwardaccess,omitempty"`
	Reverseaccess            uint64 `protobuf:"varint,33,opt,name=reverseaccess" json:"reverseaccess,omitempty"`
	Classification           uint64 `protobuf:"varint,34,opt,name=classification" json:"classification,omitempty"`
	Surface                  uint64 `protobuf:"varint,35,opt,name=surface" json:"surface,omitempty"`
	Shoulder                 uint64 `protobuf:"varint,36,opt,name=shoulder" json:"shoulder,omitempty"`
	Spare2                   uint64 `protobuf:"varint,37,opt,name=spare2" json:"spare2,omitempty"`
	UseSidepath              uint64 `protobuf:"varint,38,opt,name=use_sidepath,json=useSidepath" json:"use_sidepath,omitempty"`
	Dismount                 uint64 `protobuf:"varint,39,opt,name=dismount" json:"dismount,omitempty"`
	Density                  uint64 `protobuf:"varint,40,opt,name=density" json:"density,omitempty"`
	SpeedLimit               uint64 `protobuf:"varint,41,opt,name=speed_limit,json=speedLimit" json:"speed_limit,omitempty"`
	Named                    uint64 `protobuf:"varint,42,opt,name=named" json:"named,omitempty"`
	LaneConn                 uint64 `protobuf:"varint,43,opt,name=lane_conn,json=laneConn" json:"lane_conn,omitempty"`
	TrafficSeg               uint64 `protobuf:"varint,44,opt,name=traffic_seg,json=trafficSeg" json:"traffic_seg,omitempty"`
	SacScale                 uint64 `protobuf:"varint,45,opt,name=sac_scale,json=sacScale" json:"sac_scale,omitempty"`
	Spare                    uint64 `protobuf:"varint,46,opt,name=spare" json:"spare,omitempty"`
	// Geometric attributes: length, weighted grade, curvature factor.
	// Turn types between edges.
	Turntype   uint64 `protobuf:"varint,47,opt,name=turntype" json:"turntype,omitempty"`
	EdgeToLeft uint64 `protobuf:"varint,48,opt,name=edge_to_left,json=edgeToLeft" json:"edge_to_left,omitempty"`
	// the "from edge" and this edge)
	Length               uint64   `protobuf:"varint,49,opt,name=length" json:"length,omitempty"`
	WeightedGrade        uint64   `protobuf:"varint,50,opt,name=weighted_grade,json=weightedGrade" json:"weighted_grade,omitempty"`
	Curvature            uint64   `protobuf:"varint,51,opt,name=curvature" json:"curvature,omitempty"`
	SidewalkLeft         uint32   `protobuf:"varint,52,opt,name=sidewalk_left,json=sidewalkLeft" json:"sidewalk_left,omitempty"`
	SidewalkRight        uint32   `protobuf:"varint,153,opt,name=sidewalk_right,json=sidewalkRight" json:"sidewalk_right,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DirectedEdge) Reset()         { *m = DirectedEdge{} }
func (m *DirectedEdge) String() string { return proto.CompactTextString(m) }
func (*DirectedEdge) ProtoMessage()    {}
func (*DirectedEdge) Descriptor() ([]byte, []int) {
	return fileDescriptor_directededge_a0dae25ae309d65b, []int{0}
}
func (m *DirectedEdge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DirectedEdge.Unmarshal(m, b)
}
func (m *DirectedEdge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DirectedEdge.Marshal(b, m, deterministic)
}
func (dst *DirectedEdge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DirectedEdge.Merge(dst, src)
}
func (m *DirectedEdge) XXX_Size() int {
	return xxx_messageInfo_DirectedEdge.Size(m)
}
func (m *DirectedEdge) XXX_DiscardUnknown() {
	xxx_messageInfo_DirectedEdge.DiscardUnknown(m)
}

var xxx_messageInfo_DirectedEdge proto.InternalMessageInfo

func (m *DirectedEdge) GetEndnode() uint64 {
	if m != nil {
		return m.Endnode
	}
	return 0
}

func (m *DirectedEdge) GetAccessrestriction() uint64 {
	if m != nil {
		return m.Accessrestriction
	}
	return 0
}

func (m *DirectedEdge) GetStartrestriction() uint64 {
	if m != nil {
		return m.Startrestriction
	}
	return 0
}

func (m *DirectedEdge) GetEndrestriction() uint64 {
	if m != nil {
		return m.Endrestriction
	}
	return 0
}

func (m *DirectedEdge) GetExitsign() uint64 {
	if m != nil {
		return m.Exitsign
	}
	return 0
}

func (m *DirectedEdge) GetForward() uint64 {
	if m != nil {
		return m.Forward
	}
	return 0
}

func (m *DirectedEdge) GetDriveonright() uint64 {
	if m != nil {
		return m.Driveonright
	}
	return 0
}

func (m *DirectedEdge) GetSpeed() uint64 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *DirectedEdge) GetTruckspeed() uint64 {
	if m != nil {
		return m.Truckspeed
	}
	return 0
}

func (m *DirectedEdge) GetRestrictions() uint64 {
	if m != nil {
		return m.Restrictions
	}
	return 0
}

func (m *DirectedEdge) GetLanecount() uint64 {
	if m != nil {
		return m.Lanecount
	}
	return 0
}

func (m *DirectedEdge) GetBikenetwork() uint64 {
	if m != nil {
		return m.Bikenetwork
	}
	return 0
}

func (m *DirectedEdge) GetUse() uint64 {
	if m != nil {
		return m.Use
	}
	return 0
}

func (m *DirectedEdge) GetSpeedtype() uint64 {
	if m != nil {
		return m.Speedtype
	}
	return 0
}

func (m *DirectedEdge) GetOppindex() uint64 {
	if m != nil {
		return m.Oppindex
	}
	return 0
}

func (m *DirectedEdge) GetLink() uint64 {
	if m != nil {
		return m.Link
	}
	return 0
}

func (m *DirectedEdge) GetInternal() uint64 {
	if m != nil {
		return m.Internal
	}
	return 0
}

func (m *DirectedEdge) GetDeadend() uint64 {
	if m != nil {
		return m.Deadend
	}
	return 0
}

func (m *DirectedEdge) GetToll() uint64 {
	if m != nil {
		return m.Toll
	}
	return 0
}

func (m *DirectedEdge) GetSeasonal() uint64 {
	if m != nil {
		return m.Seasonal
	}
	return 0
}

func (m *DirectedEdge) GetDestOnly() uint64 {
	if m != nil {
		return m.DestOnly
	}
	return 0
}

func (m *DirectedEdge) GetTunnel() uint64 {
	if m != nil {
		return m.Tunnel
	}
	return 0
}

func (m *DirectedEdge) GetBridge() uint64 {
	if m != nil {
		return m.Bridge
	}
	return 0
}

func (m *DirectedEdge) GetRoundabout() uint64 {
	if m != nil {
		return m.Roundabout
	}
	return 0
}

func (m *DirectedEdge) GetUnreachable() uint64 {
	if m != nil {
		return m.Unreachable
	}
	return 0
}

func (m *DirectedEdge) GetTrafficSignal() uint64 {
	if m != nil {
		return m.TrafficSignal
	}
	return 0
}

func (m *DirectedEdge) GetNotThru() uint64 {
	if m != nil {
		return m.NotThru
	}
	return 0
}

func (m *DirectedEdge) GetCycleLane() uint64 {
	if m != nil {
		return m.CycleLane
	}
	return 0
}

func (m *DirectedEdge) GetTruckRoute() uint64 {
	if m != nil {
		return m.TruckRoute
	}
	return 0
}

func (m *DirectedEdge) GetCtryCrossing() uint64 {
	if m != nil {
		return m.CtryCrossing
	}
	return 0
}

func (m *DirectedEdge) GetPartOfComplexRestriction() uint64 {
	if m != nil {
		return m.PartOfComplexRestriction
	}
	return 0
}

func (m *DirectedEdge) GetForwardaccess() uint64 {
	if m != nil {
		return m.Forwardaccess
	}
	return 0
}

func (m *DirectedEdge) GetReverseaccess() uint64 {
	if m != nil {
		return m.Reverseaccess
	}
	return 0
}

func (m *DirectedEdge) GetClassification() uint64 {
	if m != nil {
		return m.Classification
	}
	return 0
}

func (m *DirectedEdge) GetSurface() uint64 {
	if m != nil {
		return m.Surface
	}
	return 0
}

func (m *DirectedEdge) GetShoulder() uint64 {
	if m != nil {
		return m.Shoulder
	}
	return 0
}

func (m *DirectedEdge) GetSpare2() uint64 {
	if m != nil {
		return m.Spare2
	}
	return 0
}

func (m *DirectedEdge) GetUseSidepath() uint64 {
	if m != nil {
		return m.UseSidepath
	}
	return 0
}

func (m *DirectedEdge) GetDismount() uint64 {
	if m != nil {
		return m.Dismount
	}
	return 0
}

func (m *DirectedEdge) GetDensity() uint64 {
	if m != nil {
		return m.Density
	}
	return 0
}

func (m *DirectedEdge) GetSpeedLimit() uint64 {
	if m != nil {
		return m.SpeedLimit
	}
	return 0
}

func (m *DirectedEdge) GetNamed() uint64 {
	if m != nil {
		return m.Named
	}
	return 0
}

func (m *DirectedEdge) GetLaneConn() uint64 {
	if m != nil {
		return m.LaneConn
	}
	return 0
}

func (m *DirectedEdge) GetTrafficSeg() uint64 {
	if m != nil {
		return m.TrafficSeg
	}
	return 0
}

func (m *DirectedEdge) GetSacScale() uint64 {
	if m != nil {
		return m.SacScale
	}
	return 0
}

func (m *DirectedEdge) GetSpare() uint64 {
	if m != nil {
		return m.Spare
	}
	return 0
}

func (m *DirectedEdge) GetTurntype() uint64 {
	if m != nil {
		return m.Turntype
	}
	return 0
}

func (m *DirectedEdge) GetEdgeToLeft() uint64 {
	if m != nil {
		return m.EdgeToLeft
	}
	return 0
}

func (m *DirectedEdge) GetLength() uint64 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *DirectedEdge) GetWeightedGrade() uint64 {
	if m != nil {
		return m.WeightedGrade
	}
	return 0
}

func (m *DirectedEdge) GetCurvature() uint64 {
	if m != nil {
		return m.Curvature
	}
	return 0
}

func (m *DirectedEdge) GetSidewalkLeft() uint32 {
	if m != nil {
		return m.SidewalkLeft
	}
	return 0
}

func (m *DirectedEdge) GetSidewalkRight() uint32 {
	if m != nil {
		return m.SidewalkRight
	}
	return 0
}

func init() {
	proto.RegisterType((*DirectedEdge)(nil), "directededge.DirectedEdge")
}

func init() { proto.RegisterFile("directededge.proto", fileDescriptor_directededge_a0dae25ae309d65b) }

var fileDescriptor_directededge_a0dae25ae309d65b = []byte{
	// 844 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x95, 0x4d, 0x73, 0x14, 0x37,
	0x10, 0x86, 0xcb, 0xc1, 0x18, 0x5b, 0xde, 0x75, 0x8c, 0x42, 0x48, 0x83, 0xf9, 0x30, 0x06, 0x1c,
	0x87, 0x10, 0x92, 0x40, 0xae, 0x39, 0x39, 0xa9, 0x5c, 0x5c, 0x45, 0xd5, 0x9a, 0xfb, 0x94, 0x56,
	0xea, 0x9d, 0x55, 0xad, 0x2c, 0x4d, 0x49, 0x1a, 0xdb, 0x7b, 0xcf, 0x9f, 0xc8, 0xbf, 0x4d, 0xb5,
	0x5a, 0x63, 0xc6, 0x70, 0x9b, 0xf7, 0xe9, 0x77, 0x5a, 0xb3, 0xfd, 0xa1, 0x15, 0xd2, 0xd8, 0x88,
	0x3a, 0xa3, 0x41, 0xd3, 0xe2, 0xbb, 0x2e, 0x86, 0x1c, 0xe4, 0x64, 0xcc, 0x8e, 0xfe, 0x9d, 0x8a,
	0xc9, 0x5f, 0x15, 0xfc, 0x6d, 0x5a, 0x94, 0x20, 0xee, 0xa1, 0x37, 0x3e, 0x18, 0x84, 0x8d, 0xc3,
	0x8d, 0x93, 0xcd, 0xd9, 0x20, 0xe5, 0x5b, 0x71, 0x5f, 0x69, 0x8d, 0x29, 0x45, 0x4c, 0x39, 0x5a,
	0x9d, 0x6d, 0xf0, 0xf0, 0x4d, 0xf1, 0x7c, 0x1d, 0x90, 0x6f, 0xc4, 0x7e, 0xca, 0x2a, 0xe6, 0xb1,
	0xf9, 0x4e, 0x31, 0x7f, 0xc5, 0xe5, 0xb1, 0xd8, 0x43, 0x6f, 0xc6, 0xce, 0xcd, 0xe2, 0xfc, 0x82,
	0xca, 0xc7, 0x62, 0x1b, 0xaf, 0x6d, 0x4e, 0xb6, 0xf5, 0x70, 0xb7, 0x38, 0x6e, 0x34, 0x7d, 0xf7,
	0x22, 0xc4, 0x2b, 0x15, 0x0d, 0x6c, 0xf1, 0x77, 0x57, 0x29, 0x8f, 0xc4, 0xc4, 0x44, 0x7b, 0x89,
	0xc1, 0x47, 0xdb, 0x2e, 0x33, 0xdc, 0x2b, 0xe1, 0x5b, 0x4c, 0x3e, 0x10, 0x77, 0x53, 0x87, 0x68,
	0x60, 0xbb, 0x04, 0x59, 0xc8, 0x67, 0x42, 0xe4, 0xd8, 0xeb, 0x15, 0x87, 0x76, 0x4a, 0x68, 0x44,
	0x28, 0xf3, 0xe8, 0xf3, 0x12, 0x08, 0xce, 0x3c, 0x66, 0xf2, 0x89, 0xd8, 0x71, 0xca, 0xa3, 0x0e,
	0xbd, 0xcf, 0xb0, 0x5b, 0x0c, 0x9f, 0x81, 0x3c, 0x14, 0xbb, 0x73, 0xbb, 0x42, 0x8f, 0xf9, 0x2a,
	0xc4, 0x15, 0x4c, 0x4a, 0x7c, 0x8c, 0xe4, 0xbe, 0xb8, 0xd3, 0x27, 0x84, 0x69, 0x89, 0xd0, 0x23,
	0x65, 0x2c, 0xc7, 0xe7, 0x75, 0x87, 0xb0, 0xc7, 0x19, 0x6f, 0x00, 0xd5, 0x28, 0x74, 0x9d, 0xf5,
	0x06, 0xaf, 0xe1, 0x5b, 0xae, 0xd1, 0xa0, 0xa5, 0x14, 0x9b, 0xce, 0xfa, 0x15, 0xec, 0x17, 0x5e,
	0x9e, 0xc9, 0x6f, 0x7d, 0xc6, 0xe8, 0x95, 0x83, 0xfb, 0xec, 0x1f, 0x34, 0xd5, 0xd4, 0xa0, 0x32,
	0xe8, 0x0d, 0x48, 0xae, 0x69, 0x95, 0x94, 0x29, 0x07, 0xe7, 0xe0, 0x3b, 0xce, 0x44, 0xcf, 0x94,
	0x29, 0xa1, 0x4a, 0x81, 0x32, 0x3d, 0xe0, 0x4c, 0x83, 0x96, 0x07, 0x62, 0xc7, 0x60, 0xca, 0x4d,
	0xf0, 0x6e, 0x0d, 0xdf, 0x73, 0x90, 0xc0, 0x47, 0xef, 0xd6, 0xf2, 0xa1, 0xd8, 0xca, 0xbd, 0xf7,
	0xe8, 0xe0, 0x61, 0x89, 0x54, 0x45, 0x7c, 0x1e, 0xad, 0x69, 0x11, 0x7e, 0x60, 0xce, 0x8a, 0xda,
	0x12, 0x43, 0xef, 0x8d, 0x9a, 0x87, 0x3e, 0x03, 0x70, 0x5b, 0x3e, 0x13, 0x2a, 0x6a, 0xef, 0x23,
	0x2a, 0xbd, 0x54, 0x73, 0x87, 0xf0, 0x88, 0x8b, 0x3a, 0x42, 0xf2, 0xb5, 0xd8, 0xcb, 0x51, 0x2d,
	0x16, 0x56, 0x37, 0x34, 0x3c, 0xca, 0xc1, 0xe3, 0x62, 0x9a, 0x56, 0x7a, 0x5e, 0xa0, 0x7c, 0x24,
	0xb6, 0x7d, 0xc8, 0x4d, 0x5e, 0xc6, 0x1e, 0x0e, 0xb8, 0x00, 0x3e, 0xe4, 0x4f, 0xcb, 0xd8, 0xcb,
	0xa7, 0x42, 0xe8, 0xb5, 0x76, 0xd8, 0x50, 0x2f, 0xe1, 0x09, 0x77, 0xa1, 0x90, 0x33, 0xe5, 0x51,
	0x3e, 0x17, 0xbb, 0x65, 0x4e, 0x9a, 0x18, 0xfa, 0x8c, 0xf0, 0x74, 0x34, 0x3a, 0x33, 0x22, 0xf2,
	0xa5, 0x98, 0xea, 0x1c, 0xd7, 0x8d, 0x8e, 0x21, 0x25, 0xeb, 0x5b, 0x78, 0xc6, 0xb3, 0x43, 0xf0,
	0xb4, 0x32, 0xf9, 0xa7, 0x38, 0xe8, 0x54, 0xcc, 0x4d, 0x58, 0x34, 0x3a, 0x5c, 0x74, 0x0e, 0xaf,
	0x9b, 0xf1, 0x92, 0x3c, 0x2f, 0xaf, 0x00, 0x59, 0x3e, 0x2e, 0x4e, 0xd9, 0x30, 0x1b, 0xad, 0xcb,
	0x2b, 0x31, 0xad, 0x3b, 0xc0, 0xeb, 0x09, 0x87, 0xfc, 0x23, 0x6f, 0x41, 0x72, 0x45, 0xbc, 0xc4,
	0x98, 0xb0, 0xba, 0x5e, 0xb0, 0xeb, 0x16, 0xa4, 0x15, 0xd5, 0x4e, 0xa5, 0x64, 0x17, 0x56, 0xab,
	0x72, 0xfa, 0x11, 0xaf, 0xe8, 0x6d, 0x4a, 0x23, 0x93, 0xfa, 0xb8, 0x50, 0x1a, 0xe1, 0x25, 0x57,
	0xac, 0xca, 0x32, 0x1e, 0xcb, 0xd0, 0x3b, 0x83, 0x11, 0x5e, 0xd5, 0xf1, 0xa8, 0x9a, 0x3a, 0x9d,
	0x3a, 0x15, 0xf1, 0x3d, 0xbc, 0xe6, 0x4e, 0xb3, 0x92, 0x2f, 0xc4, 0xa4, 0x4f, 0xd8, 0x24, 0x6b,
	0xb0, 0x53, 0x79, 0x09, 0xc7, 0xb5, 0x95, 0x09, 0xcf, 0x2b, 0xa2, 0xb4, 0xc6, 0xa6, 0x8b, 0xb2,
	0x5e, 0x3f, 0xd6, 0xc1, 0xaa, 0x9a, 0xe7, 0xd7, 0x27, 0x9b, 0xd7, 0x70, 0x32, 0xcc, 0x6f, 0x91,
	0xd4, 0x9f, 0xb2, 0x32, 0x8d, 0xb3, 0x17, 0x36, 0xc3, 0x4f, 0xdc, 0x9f, 0x82, 0xce, 0x88, 0xd0,
	0x85, 0xe0, 0xd5, 0x05, 0x1a, 0x78, 0xc3, 0x17, 0x42, 0x11, 0x34, 0xc6, 0xd4, 0xef, 0x46, 0x07,
	0xef, 0xe1, 0x67, 0x3e, 0x8d, 0xc0, 0x69, 0xf0, 0x9e, 0x7b, 0x5e, 0x87, 0x0a, 0x5b, 0x78, 0x3b,
	0xf4, 0x9c, 0x27, 0x0a, 0x5b, 0x7a, 0x3b, 0x29, 0xdd, 0x24, 0xad, 0x1c, 0xc2, 0x2f, 0xb5, 0x04,
	0x4a, 0x9f, 0x93, 0xe6, 0x1b, 0x48, 0x45, 0x84, 0x77, 0xc3, 0x0d, 0xa4, 0x62, 0x29, 0x5a, 0xee,
	0xa3, 0x2f, 0xab, 0xfe, 0x2b, 0xbf, 0x31, 0x68, 0x79, 0x28, 0x26, 0x74, 0x85, 0x37, 0x39, 0x34,
	0x0e, 0x17, 0x19, 0x7e, 0xe3, 0x03, 0x89, 0x7d, 0x0a, 0x67, 0xb8, 0xc8, 0x54, 0x56, 0x87, 0xbe,
	0xcd, 0x4b, 0xf8, 0x9d, 0xcb, 0xca, 0x8a, 0xc6, 0xff, 0x0a, 0xe9, 0xde, 0x43, 0xd3, 0xb4, 0x51,
	0x19, 0x84, 0xf7, 0xdc, 0xf3, 0x81, 0xfe, 0x43, 0x90, 0x2e, 0x1a, 0xdd, 0xc7, 0x4b, 0x95, 0xfb,
	0x88, 0xf0, 0xa1, 0x8e, 0xf8, 0x00, 0x68, 0x82, 0xa9, 0x2f, 0x57, 0xca, 0xad, 0xf8, 0xfc, 0x3f,
	0x0e, 0x37, 0x4e, 0xa6, 0xb3, 0xc9, 0x00, 0xcb, 0x17, 0x1c, 0x8b, 0xbd, 0x1b, 0x13, 0xdf, 0xbe,
	0xff, 0x6d, 0x14, 0xdb, 0xcd, 0xbb, 0x33, 0xa2, 0xf3, 0xad, 0xf2, 0xdf, 0xf4, 0xe1, 0xff, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x35, 0x4a, 0x18, 0xf0, 0xb1, 0x06, 0x00, 0x00,
}
